{
  "Import: tuya": {
    "prefix": "imty",
    "body": "import { $1 } from 'tuya-panel-kit';",
  },
  // Basic
  "BrickButton 块状按钮": {
    "prefix": "ty-brickbutton",
    "body": [
      "<BrickButton text=\"${1:loading}\" loading={${2|true,false|}} />"
    ],
    "description": "BrickButton 是在 Button 功能基础上进行的丰富"
  },
  "Button 按钮": {
    "prefix": "ty-button",
    "body": [
      "<Button text=\"${1:点我一下}\" onPress={ $2 }/>"
    ],
    "description": "Button 用于一些纯文本、图片、Icon 等需要点击的场合"
  },
  "Iconfont 图标": {
    "prefix": "ty-iconfont",
    "body": "<IconFont name=\"${1:power}\" color=\"${2:red}\" />",
    "description": "description"
  },
  "Motion.Fade 淡入淡出": {
    "prefix": "ty-motion-fade",
    "body": [
      "<Motion.Fade",
      "  show={$1}",
      "  onHide={() =>{",
      "    $1",
      "  }}",
      "/>"
    ],
    "description": "Motion 是一个用于丰富组件动作的组件"
  },
  "Motion.PullUp 上拉下滑": {
    "prefix": "ty-motion-fade",
    "body": [
      "<Motion.PullUp",
      "  show={$1}",
      "  onHide={() =>{",
      "    $1",
      "  }}",
      "/>"
    ],
    "description": "Motion 是一个用于丰富组件动作的组件"
  },
  "Motion.ScaleFadeIn 放大淡入/缩小淡出": {
    "prefix": "ty-motion-scaleFadeIn",
    "body": [
      "<Motion.ScaleFadeIn",
      "  show={$1}",
      "  onHide={() =>{",
      "    $1",
      "  }}",
      "/>"
    ],
    "description": "Motion 是一个用于丰富组件动作的组件"
  },
  "Motion.ScalePullDown 放大淡入/下滑淡出": {
    "prefix": "ty-motion-scalePullDown",
    "body": [
      "<Motion.ScalePullDown",
      "  show={$1}",
      "  onHide={() =>{",
      "    $2",
      "  }}",
      "/>"
    ],
    "description": "Motion 是一个用于丰富组件动作的组件"
  },
  "Motion.PushDown 下拉上推": {
    "prefix": "ty-motion-scalePullDown",
    "body": [
      "<Motion.PushDown",
      "  show={$1}",
      "  onHide={() =>{",
      "    $2",
      "  }}",
      "/>"
    ],
    "description": "Motion 是一个用于丰富组件动作的组件"
  },
  "Motion.Toast 无操作放大淡入/缩小淡出": {
    "prefix": "ty-motion-scalePullDown",
    "body": [
      "<Motion.Toast",
      "  show={$1}",
      "  onHide={() =>{",
      "    $2",
      "  }}",
      "/>"
    ],
    "description": "Motion 是一个用于丰富组件动作的组件"
  },
  "TYText 文字": {
    "prefix": "ty-text",
    "body": [
      "<TYText text=\"${1:我是涂鸦er}\" color=\"${2:red}\" weight=\"${3:bold}\" size={${4:24}} />",
    ],
    "description": "TYText 在 Text 组件上进行了一层封装，保证 IOS 与 Android 表征一致"
  },
  "UnitText 字体单位": {
    "prefix": "ty-unitText",
    "body": [
      "<UnitText unit=\"${1:%}\" unitColor=\"${2:green}\" />",
    ],
    "description": "UnitText 可用于显示一些加粗的展示型文字类型"
  },
  // Data entry
  "Checkbox 选择框": {
    "prefix": "ty-checkbox",
    "body": [
      "<Checkbox checked={${2:true}} onChange={checked => {$3}}>",
      "  ${1:复选框}",
      "</Checkbox>"
    ],
    "description": "单选框或多选框"
  },
  "DatePicker 日期选择器": {
    "prefix": "ty-datePicker",
    "body": [
      "<DatePicker",
      "  defaultDate={${1:new Date()}}",
      "  onDateChange={date => console.log(date)}",
      "/>"
    ],
    "description": "DatePicker 是一个灵活的支持多种模式的时间日期选择组件"
  },
  "PickerView 选择器": {
    "prefix": "ty-picker",
    "body": [
      "<Picker",
      "  style={{",
      "    width: 375,",
      "    height: 225,",
      "  }}",
      "  onValueChange={value => console.log(value)}",
      ">",
      "  {['杭州', '温州', '宁波', '绍兴', '嵊州', '金华'].map(value => (",
      "    <Picker.Item key={value} value={value} label={value} />",
      "  ))}",
      "</Picker>"
    ],
    "description": "PickerView 是一个多选一的容器视图，请务必给 PickerView 指定一个宽高，否则无法渲染。"
  },
  "Slider.Horizontal 滑动选择器": {
    "prefix": "ty-slider-horizontal",
    "body": [
      "<Slider.Horizontal",
      "  style={{ width: 295 }}",
      "  maximumValue={100}",
      "  minimumValue={0}",
      "  maximumTrackTintColor=\"rgba(0, 0, 0, 0.1)\"",
      "  minimumTrackTintColor=\"#4397D7\"",
      "  onSlidingComplete={v => console.log(v)}",
      "/>"
    ],
    "description": "Slider 是滑动选择器，一般在面板内部用于处理可上报下发的数值型 dp 点"
  },
  "Slider.Vertical 滑动选择器": {
    "prefix": "ty-slider-vertical",
    "body": [
      "<Slider.Vertical",
      "  style={{ height: 200 }}",
      "  minimumValue={0}",
      "  maximumValue={100}",
      "  minimumTrackTintColor=\"#4A90E2\"",
      "  onSlidingComplete={v => console.log(v)}",
      "/>"
    ],
    "description": "Slider 是滑动选择器，一般在面板内部用于处理可上报下发的数值型 dp 点"
  },
  "Stepper 步进器": {
    "prefix": "ty-stepper",
    "body": [
      "<Stepper buttonType=\"${1| ellipse,triangle}\" value={${2:0}} editable={${3|true,false|}} />"
    ],
    "description": "Stepper 由增加按钮、减少按钮和输入框组成，用于在一定范围内输入、调整数字。"
  },
  "SwitchButton 开关": {
    "prefix": "ty-switchButton",
    "body": [
      "<SwitchButton",
      "  onValueChange={v => console.log(v)}",
      "/>"
    ],
    "description": "SwitchButton 是一个开关组件"
  },
  "TimerPicker 时间段选择器": {
    "prefix": "ty-timerPicker",
    "body": [
      "<TimerPicker",
      "  startTime={0}",
      "  endTime={0}",
      "  onTimerChange={(startTime, endTime) => console.log({ startTime, endTime })}",
      "/>"
    ],
    "description": "TimerPicker 时间段选择器"
  },
  // Feedback
  "Dialog.alert 对话框": {
    "prefix": "ty-dialog-alert",
    "body": [
      "Dialog.alert({",
      "  title: '${1:标题}',",
      "  subTitle: '${2:副标题}',",
      "  confirmText: '${3:确认}',",
      "  onConfirm: (data, { close }) => {",
      "    $4",
      "    close();",
      "  },",
      "});"
    ],
    "description": "警告框"
  },
  "Dialog.confirm 提示框": {
    "prefix": "ty-dialog-confirm",
    "body": [
      "Dialog.confirm({",
      "  title: '${1:标题}',",
      "  subTitle: '${2:副标题}',",
      "  cancelText: '${3:取消}',",
      "  confirmText: '${4:确认}',",
      "  onConfirm: (data, { close }) => {",
      "    $5",
      "    close();",
      "  },",
      "});"
    ],
    "description": "提示框"
  },
  "Dialog.prompt 输入对话框": {
    "prefix": "ty-dialog-prompt",
    "body": [
      "Dialog.prompt({",
      "  title: '${1:输入框}',",
      "  subTitle: '${2:副标题}',",
      "  cancelText: '${3:取消}',",
      "  confirmText: '${4:确认}',",
      "  placeholder: '${5:Password}',",
      "  onConfirm: (text, { close }) => {",
      "    console.log(text)",
      "    close();",
      "  },",
      "});"
    ],
    "description": "非受控输入框"
  },
  "Dialog.checkbox 单选对话框": {
    "prefix": "ty-dialog-checkbox-radio",
    "body": [
      "Dialog.checkbox({",
      "  title: '${1:Required}',",
      "  cancelText: '取消',",
      "  confirmText: '确认',",
      "  type: 'radio',",
      "  dataSource: [",
      "    {",
      "      value: 'code1',",
      "      title: '传感器选择',",
      "    },",
      "    {",
      "      value: 'code2',",
      "      title: '房间传感器校准',",
      "    },",
      "    {",
      "      value: 'code3',",
      "      title: '地板传感器校准',",
      "      iconSize: 24,",
      "      Icon: 'warning',",
      "      reverse: true,",
      "      hideOnUnselect: true,",
      "    },",
      "  ],",
      "  onConfirm: (value, { close }) => {",
      "    console.log(value)",
      "    close();",
      "  },",
      "});"
    ],
    "description": "单选对话框"
  },
  "Dialog.checkbox 多选对话框": {
    "prefix": "ty-dialog-checkbox-switch",
    "body": [
      "Dialog.checkbox({",
      "  title: '${1:Required}',",
      "  cancelText: '取消',",
      "  confirmText: '确认',",
      "  type: 'switch',",
      "  dataSource: [",
      "    {",
      "      value: 'code1',",
      "      title: '传感器选择',",
      "    },",
      "    {",
      "      value: 'code2',",
      "      title: '房间传感器校准',",
      "    },",
      "    {",
      "      value: 'code3',",
      "      title: '地板传感器校准',",
      "    },",
      "    {",
      "      value: 'code4',",
      "      title: '自适应功能',",
      "    },",
      "    {",
      "      value: 'code5',",
      "      title: '防冻保护功能',",
      "      iconSize: 20,",
      "      Icon: 'warning',",
      "      reverse: true,",
      "      hideOnUnselect: true,",
      "    },",
      "    {",
      "      value: 'code6',",
      "      title: '测试滚动功能',",
      "      reverse: true,",
      "    },",
      "  ],",
      "  onConfirm: (value, { close }) => {",
      "    console.log(value)",
      "    close();",
      "  },",
      "});"
    ],
    "description": "多选对话框"
  },
  "Dialog.list 列表对话框": {
    "prefix": "ty-dialog-list",
    "body": [
      "Dialog.list({",
      "  title: '${1:这是标题}',",
      "  subTitle: '${2:这是内容}',",
      "  dataSource: new Array(6).fill(1).map((_, idx) => ({",
      "    title: idx === 0 ? '点我关闭' : `选项${idx}`,",
      "    onPress: () => {",
      "      idx === 0 && Dialog.close();",
      "      console.log('Press', idx);",
      "    },",
      "  })),",
      "  cancelText: '取消',",
      "  confirmText: '确认',",
      "  onConfirm: (data, { close }) => {",
      "    console.log(data)",
      "    close();",
      "  },",
      "});"
    ],
    "description": "列表对话框"
  },
  "Dialog.custom 自定义对话框": {
    "prefix": "ty-dialog-custom",
    "body": [
      "Dialog.custom({",
      "  title: 'Custom',",
      "  cancelText: '取消',",
      "  confirmText: '确认',",
      "  content: (",
      "    <View style={{ height: 300, alignItems: 'center', justifyContent: 'center' }}>",
      "      <Text style={{ fontSize: 32, color: '#000' }}>自定义内容</Text>",
      "    </View>",
      "  ),",
      "  onConfirm: (data, { close }) => {",
      "    console.log(data)",
      "    close();",
      "  },",
      "});"
    ],
    "description": "列表对话框"
  },
  "GlobalToast 全局吐司": {
    "prefix": "ty-globalToast",
    "body": [
      "GlobalToast.show({",
      "  text: '${1:设置成功}',",
      "  onFinish: () => {",
      "    $2",
      "    console.log('Toast结束');",
      "    GlobalToast.hide();",
      "  },",
      "});"
    ],
    "description": "GlobalToast 是一个挂载在 FullView 上伴有淡入淡出动画效果的全局提示"
  },
  "Modal 遮罩": {
    "prefix": "ty-modal",
    "body": [
      "<Modal visible={ false } onMaskPress={() => console.log('modal closed')}>",
      "  <TYText style={textStyle} text=\"我是遮罩\" />",
      "</Modal>"
    ],
    "description": "基础使用"
  },
  "Modal.Countdown 倒计时弹出层": {
    "prefix": "ty-modal-countdown",
    "body": [
      "<Modal.Countdown",
      "  visible={false}",
      "  onMaskPress={() => {}}",
      "  onCancel={() => {}}",
      "  onConfirm={() => {}}",
      "  title=\"倒计时\"",
      "  cancelText=\"取消\"",
      "  confirmText=\"确认\"",
      "  hourText=\"小时\"",
      "  minuteText=\"分钟\"",
      "/>"
    ],
    "description": "Modal 倒计时弹出层"
  },
  "Modal.DatePicker 日期选择弹出层": {
    "prefix": "ty-modal-datePicker",
    "body": [
      "<Modal.DatePicker",
      "  visible={false}",
      "  onMaskPress={() => {}}",
      "  onCancel={() => {}}",
      "  onConfirm={() => {}}",
      "  title=\"生日\"",
      "  cancelText=\"取消\"",
      "  confirmText=\"确认\"",
      "  hourText=\"小时\"",
      "  minuteText=\"分钟\"",
      "  mode=\"datetime\"",
      "  minDate={new Date(1918, 0, 1, 0, 0, 0)}",
      "  maxDate={new Date(2018, 11, 31, 23, 59, 59)}",
      "/>"
    ],
    "description": "日期选择弹出层"
  },
  "Modal.List 列表选择弹出层": {
    "prefix": "ty-modal-list",
    "body": [
      "<Modal.List",
      "  visible={false}",
      "  dataSource={[",
      "    {",
      "      label: '1',",
      "      value: '1',",
      "    },",
      "    {",
      "      label: '2',",
      "      value: '2',",
      "    },",
      "  ]}",
      "  type=\"${1|radio, switch|}\"",
      "  onMaskPress={() => {}}",
      "  onCancel={() => {}}",
      "  onConfirm={() => {}}",
      "/>"
    ],
    "description": "列表选择弹出层"
  },
  "Modal.Picker 选择弹出层": {
    "prefix": "ty-modal-picker",
    "body": [
      "<Modal.Picker",
      "  visible={false}",
      "  dataSource={[",
      "    {",
      "      label: '1',",
      "      value: '1',",
      "    },",
      "    {",
      "      label: '2',",
      "      value: '2',",
      "    },",
      "  ]}",
      "  label=\"tuya\"",
      "  onMaskPress={() => {}}",
      "  onCancel={() => {}}",
      "  onConfirm={() => {}}",
      "  onValueChange={value => console.log('onValueChange', value)}",
      "/>"
    ],
    "description": "Picker 选择弹出层"
  },
  "Notification 全局通知": {
    "prefix": "ty-notification",
    "body": [
      "Notification.show({",
      "  message: '${1:警告提示框}',",
      "  onClose: () => {",
      "    Notification.hide();",
      "  },",
      "  theme: {",
      "    successIcon: 'red',",
      "    errorIcon: 'yellow',",
      "    warningIcon: 'black',",
      "  },",
      "});"
    ],
    "description": "通知栏，可以显示成功、警告、错误此类三种信息"
  },
  "NotificationLegacy 通知栏": {
    "prefix": "ty-notificationLegacy",
    "body": [
      "<NotificationLegacy message=\"${1:I am Notification}\" />"
    ],
    "description": "通知栏，可以显示成功、警告、错误此类三种信息"
  },
  "Popup.countdown 倒计时弹出层": {
    "prefix": "ty-popup-countdown",
    "body": [
      "Popup.countdown({",
      "  title: '倒计时',",
      "  cancelText: '取消',",
      "  confirmText: '确认',",
      "  hourText: '小时',",
      "  minuteText: '分钟',",
      "  onMaskPress: ({ close }) => close(),",
      "  onConfirm: (data, { close }) => {",
      "    console.log({ countdown: data.hour * 60 + data.minute });",
      "    close();",
      "  },",
      "});"
    ],
    "description": "倒计时弹出层"
  },
  "Popup.datePicker 日期选择弹出层": {
    "prefix": "ty-popup-datePicker",
    "body": [
      "Popup.datePicker({",
      "  title: '生日',",
      "  cancelText: '取消',",
      "  confirmText: '确认',",
      "  hourText: '小时',",
      "  minuteText: '分钟',",
      "  defaultDate: new Date(),",
      "  mode: 'datetime',",
      "  minDate: new Date(1918, 0, 1, 0, 0, 0),",
      "  maxDate: new Date(2018, 11, 31, 23, 59, 59),",
      "  onMaskPress: ({ close }) => close(),",
      "  onConfirm: (date, { close }) => {",
      "    console.log(date)",
      "    close();",
      "  },",
      "});"
    ],
    "description": "日期选择弹出层"
  },
  "Popup.timerPicker 时间段选择": {
    "prefix": "ty-popup-timerPicker",
    "body": [
      "Popup.timerPicker({",
      "  title: '时间段选择',",
      "  cancelText: '取消',",
      "  confirmText: '确认',",
      "  startTime: 0,",
      "  endTime: 0,",
      "  is12Hours: true,",
      "  onMaskPress: ({ close }) => close(),",
      "  onConfirm: ({ startTime, endTime }, { close }) => {",
      "    console.log({ timerPickerValue: [startTime, endTime] });",
      "    close();",
      "  },",
      "});"
    ],
    "description": "时间段选择"
  },
  "Popup.numberSelector 数值选择弹出层": {
    "prefix": "ty-popup-numberSelector",
    "body": [
      "Popup.numberSelector({",
      "  title: '温度调节 (℃)',",
      "  cancelText: '取消',",
      "  confirmText: '确认',",
      "  min: 0,",
      "  max: 50,",
      "  onMaskPress: ({ close }) => close(),",
      "  onConfirm: (value, { close }) => {",
      "    console.log({ numberValue: value });",
      "    close();",
      "  },",
      "});"
    ],
    "description": "数值选择弹出层"
  },
  "Popup.list 列表选择弹出层": {
    "prefix": "ty-popup-list",
    "body": [
      "Popup.list({",
      "  type: '${1|radio,switch|}',",
      "  maxItemNum: 7,",
      "  dataSource: [",
      "    {",
      "      key: '0',",
      "      title: '0',",
      "      value: '0'",
      "    },",
      "    {",
      "      key: '1',",
      "      title: '1',",
      "      value: '1'",
      "    },",
      "    {",
      "      key: '2',",
      "      title: '2',",
      "      value: '2'",
      "    },",
      "    {",
      "      key: '3',",
      "      title: '3',",
      "      value: '3'",
      "    },",
      "  ],",
      "  title: '${2:请选择}',",
      "  subTitle: '${3:副标题}',",
      "  cancelText: '取消',",
      "  confirmText: '确认',",
      "  onMaskPress: ({ close }) => close(),",
      "  onSelect: (value, { close }) => {",
      "    console.log({ listValue: value });",
      "    close();",
      "  },",
      "});"
    ],
    "description": "列表选择弹出层"
  },
  "Popup.picker Picker 选择弹出层": {
    "prefix": "ty-popup-picker",
    "body": [
      "Popup.picker({",
      "  dataSource: [",
      "    {",
      "      label: '1',",
      "      value: '1',",
      "    },",
      "    {",
      "      label: '2',",
      "      value: '2',",
      "    },",
      "  ],",
      "  singlePicker: ${1|true,false|},",
      "  title: 'Picker',",
      "  cancelText: '取消',",
      "  confirmText: '确认',",
      "  label: 'tuya',",
      "  onMaskPress: ({ close }) => close(),",
      "  onConfirm: (value, idx, { close }) => {",
      "    console.log({ pickerValue: value });",
      "    close();",
      "  },",
      "});"
    ],
    "description": "Picker 选择弹出层"
  },
  "Popup.custom 自定义弹出层": {
    "prefix": "ty-popup-custom",
    "body": [
      "Popup.custom({",
      "  content: (",
      "    <View",
      "      style={{",
      "        height: 200,",
      "        alignItems: 'center',",
      "        justifyContent: 'center',",
      "        backgroundColor: '#fff',",
      "      }}",
      "    >",
      "      <Text style={{ fontSize: 36, color: '#000' }}>Custom Content</Text>",
      "    </View>",
      "  ),",
      "  title: 'Custom',",
      "  cancelText: '取消',",
      "  confirmText: '确认',",
      "  onMaskPress: ({ close }) => close(),",
      "  onConfirm: (data, { close }) => {",
      "    close();",
      "  },",
      "});"
    ],
    "description": "自定义弹出层"
  },
  "Toast 弹出层": {
    "prefix": "ty-popup-toast",
    "body": [
      "Popup.toast({",
      "  message: 'I am Toast',",
      "});"
    ],
    "description": "Toast 弹出层"
  },
  "Swipeout 左侧滑": {
    "prefix": "ty-swipeout-left",
    "body": [
      "<Swipeout",
      "  autoClose={true}",
      "  left={[",
      "    {",
      "      text: 'action',",
      "      type: 'primary',",
      "      fontStyle: { color: '#fff', fontSize: 16 },",
      "    },",
      "  ]}",
      ">",
      "  <View",
      "    style={{",
      "      height: 44,",
      "      backgroundColor: '#f99',",
      "      justifyContent: 'center',",
      "      alignItems: 'center',",
      "      paddingHorizontal: 16,",
      "    }}",
      "  >",
      "    <TYText style={{ color: '#333' }}>${1:试试左滑}</TYText>",
      "  </View>",
      "</Swipeout>"
    ],
    "description": "一个仿 IOS 样式的侧滑操作组件"
  },
  "Swipeout 右侧滑": {
    "prefix": "ty-swipeout-right",
    "body": [
      "<Swipeout",
      "  autoClose={true}",
      "  right={[",
      "    {",
      "      text: 'delete',",
      "      type: 'delete',",
      "      fontStyle: { color: '#fff', fontSize: 16 },",
      "    },",
      "  ]}",
      ">",
      "  <View",
      "    style={{",
      "      height: 44,",
      "      backgroundColor: '#66f',",
      "      justifyContent: 'center',",
      "      alignItems: 'center',",
      "      paddingHorizontal: 16,",
      "    }}",
      "  >",
      "    <TYText style={{ color: '#333' }}>${1:试试右滑}</TYText>",
      "  </View>",
      "</Swipeout>"
    ],
    "description": "一个仿 IOS 样式的侧滑操作组件"
  },
  "Toast.Success 吐司": {
    "prefix": "ty-toast-success",
    "body": [
      "<Toast.Success text=\"${1:成功文案}\" show={${2:successShow}} onFinish={() => ${3:setSuccessShow(false)}} />"
    ],
    "description": "用于提醒用户，不打断操作"
  },
  // Presentation
  "Carousel 轮播": {
    "prefix": "ty-carousel",
    "body": [
      "<Carousel",
      "  style={{ height: 200 }}",
      "  selectedIndex={0}",
      "  autoplay={true}",
      "  loop={true}",
      "  carouselChange={index => console.log(index)}",
      ">",
      "  <View style={{ height: 200, backgroundColor: 'red' }}>",
      "    <TYText style={{ color: '#333' }}>Carousel 1</TYText>",
      "  </View>",
      "  <View style={{ height: 200, backgroundColor: 'blue' }}>",
      "    <TYText style={{ color: '#333' }}>Carousel 2</TYText>",
      "  </View>",
      "  <View style={{ height: 200, backgroundColor: 'yellow' }}>",
      "    <TYText style={{ color: '#333' }}>Carousel 3</TYText>",
      "  </View>",
      "</Carousel>"
    ],
    "description": "Carousel 是一个轮播图组件"
  },
  "CircleView 圆形视图": {
    "prefix": "ty-circleView",
    "body": [
      "<CircleView radius={30} color=\"#ff0\" borderWidth={4} borderColor=\"#00f\" />"
    ],
    "description": "CircleView 为圆形视图"
  },
  "Collapsible 折叠": {
    "prefix": "ty-collapsible",
    "body": [
      "<Collapsible",
      "  collapsed={${1:collapsed}}",
      "  align=\"top\"",
      "  style={{",
      "    width: 375,",
      "    height: 260,",
      "    backgroundColor: '#ff0',",
      "    justifyContent: 'center',",
      "    alignItems: 'center',",
      "  }}",
      ">",
      "  <View",
      "    style={{",
      "      width: 308,",
      "      height: 185,",
      "      borderRadius: 28,",
      "      backgroundColor: '#ddd',",
      "      justifyContent: 'center',",
      "      alignItems: 'center',",
      "    }}",
      "  >",
      "    <TYText",
      "      style={{",
      "        textAlign: 'center',",
      "        color: '#666',",
      "        fontSize: 20,",
      "      }}",
      "      text=\"Talk is cheap, show me the code.\"",
      "    />",
      "  </View>",
      "</Collapsible>"
    ],
    "description": "用于展示一个折叠下拉的动画效果"
  },
  "Divider 分割线": {
    "prefix": "ty-divider",
    "body": [
      "<Divider color=\"red\" width={300} />"
    ],
    "description": "Divider 分割线"
  },
  "LinearGradient 垂直两段渐变": {
    "prefix": "ty-linearGradient-verticle",
    "body": [
      "<LinearGradient",
      "  gradientId=\"Gradient1\"",
      "  style={{",
      "    width: 300,",
      "    height: 200,",
      "    marginLeft: 20,",
      "    marginVertical: 20,",
      "  }}",
      "  x1=\"0%\"",
      "  y1=\"0%\"",
      "  x2=\"0%\"",
      "  y2=\"100%\"",
      "  stops={{",
      "    '0%': 'red',",
      "    '100%': 'yellow',",
      "  }}",
      ">",
      "  <Rect width={300} height={200} />",
      "</LinearGradient>"
    ],
    "description": "垂直两段渐变"
  },
  "LinearGradient 斜向三段渐变": {
    "prefix": "ty-linearGradient-oblique",
    "body": [
      "<LinearGradient",
      "  gradientId=\"Gradient2\"",
      "  style={{ width: 300, height: 200, marginLeft: 20, marginVertical: 20 }}",
      "  x1=\"100%\"",
      "  y1=\"0%\"",
      "  x2=\"0%\"",
      "  y2=\"100%\"",
      "  stops={{",
      "    '0%': 'red',",
      "    '30%': 'blue',",
      "    '100%': 'yellow',",
      "  }}",
      ">",
      "  <Rect width={300} height={200} />",
      "</LinearGradient>"
    ],
    "description": "斜向三段渐变"
  },
  "Progress 进度条": {
    "prefix": "ty-progress",
    "body": [
      "<Progress",
      "  foreColor={{",
      "    '0%': '#1381FB',",
      "    '100%': '#00C36C',",
      "  }}",
      "  style={{ width: 100, height: 100 }}",
      "  needMaxCircle={true}",
      "  startColor=\"#1381FB\"",
      "  thumbRadius={4}",
      "  value={50}",
      "  startDegree={135}",
      "  andDegree={270}",
      "/>"
    ],
    "description": "一个常用的组件，可以手势控制当前进度，也可仅作展示作用"
  },
  "RadialGradient 径向渐变": {
    "prefix": "ty-radialGradient",
    "body": [
      "<RadialGradient",
      "  gradientId=\"Gradient1\"",
      "  style={{ width: 300, height: 200, marginLeft: 10 }}",
      "  stops={[",
      "    {",
      "      offset: '0%',",
      "      stopColor: '#ff0',",
      "      stopOpacity: '1',",
      "    },",
      "    {",
      "      offset: '100%',",
      "      stopColor: '#00f',",
      "      stopOpacity: '1',",
      "    },",
      "  ]}",
      "  rx=\"50%\"",
      "  ry=\"50%\"",
      "  fx=\"50%\"",
      "  fy=\"50%\"",
      "  cx=\"50%\"",
      "  cy=\"50%\"",
      "/>"
    ],
    "description": "RadialGradient 径向渐变"
  },
  "RotationView 旋转视图": {
    "prefix": "ty-rotationView",
    "body": [
      "<RotationView",
      "  style={{ width: 160, height: 160, marginLeft: 100, marginTop: 40 }}",
      "  active={true}",
      ">",
      "  <View",
      "    style={{",
      "      width: 140,",
      "      height: 140,",
      "      backgroundColor: 'red',",
      "      justifyContent: 'center',",
      "    }}",
      "  >",
      "    <TYText style={{ textAlign: 'center' }}>Rotation!!!</TYText>",
      "  </View>",
      "</RotationView>"
    ],
    "description": "RotationView 封装了需要旋转动画的视图容器"
  },
  "TYFlatList 列表": {
    "prefix": "ty-flatList",
    "body": [
      "<TYFlatList data={${1:[]}} />"
    ],
    "description": "基于 RN 自带的 FlatList 组件做了一层简单的封装"
  },
  "TYListItem 列表项": {
    "prefix": "ty-listItem",
    "body": [
      "<TYListItem",
      "  theme={{",
      "    fontColor: '#fff',",
      "    subFontColor: '#999',",
      "    descFontColor: 'red',",
      "    cellBg: '#222',",
      "  }}",
      "  title=\"标题\"",
      "  subTitle=\"副标题\"",
      "  Action=\"Action\"",
      "  onPress={() => console.log('clicked')}",
      "/>"
    ],
    "description": "TYListItem 是一个列表项组件"
  },
  "TYSectionList 分组列表": {
    "prefix": "ty-sectionList",
    "body": [
      "<TYSectionList sections={[]} />"
    ],
    "description": "基于 RN 自带的 SectionList 组件做了一层简单的封装"
  },
  // Navigation
  "ControllerBar 底部栏": {
    "prefix": "ty-controllerBar",
    "body": [
      "<ControllerBar.Group type=\"${1|divide,swiper|}\">",
      "  <ControllerBar",
      "    size={44}",
      "    button={[",
      "      { text: '1', type: 'primary' },",
      "      { text: '2', type: 'primary' },",
      "    ]}",
      "  />",
      "  <ControllerBar",
      "    size={44}",
      "    button={[",
      "      { text: '3', type: 'primary' },",
      "      { text: '4', type: 'primary' },",
      "    ]}",
      "  />",
      "</ControllerBar.Group>"
    ],
    "description": "ControllerBar 是有着一个或以上按钮的控制栏"
  },
  "Tab 标签栏": {
    "prefix": "ty-tab",
    "body": [
      "<Tab",
      "  animated={true}",
      "  onChange={value => console.log(value)}",
      "  tabsContainerStyle={{",
      "    height: 60,",
      "    width: 375,",
      "    alignItems: 'center',",
      "    justifyContent: 'center',",
      "  }}",
      "  style={{ backgroundColor: '#fff' }}",
      "  tabBarBackgroundColor=\"#e5e5e5\"",
      "  tabTextStyle={{ fontSize: 16 }}",
      "  >",
      "  {['Tab 1', 'Tab 2', 'Tab 3', 'Tab 4'].map((item, idx) => (",
      "    <Tab.TabPane key={`${item}`} tab={`${item}`}>",
      "      <View style={contentStyle}>",
      "        <TYText>{`This is ${item}`}</TYText>",
      "      </View>",
      "    </Tab.TabPane>",
      "  ))}",
      "</Tab>"
    ],
    "description": "用于让用户在不同的视图中进行切换"
  },
  "TabBar 标签栏拆分版": {
    "prefix": "tuya-tabBar",
    "body": [
      "<TabBar",
      "  tabs={Array.from(Array(10), (v, k) => k + 1).map(v => {",
      "    return { key: `${v}`, title: `Tab${v}` };",
      "  })}",
      "  onChange={value => console.log(value)}",
      "/>"
    ],
    "description": "TabBar 标签栏拆分版"
  },
  "Tabs 纯手势标签栏": {
    "prefix": "ty-tabs",
    "body": [
      "<Tabs",
      "  dataSource={[",
      "    { value: '1', label: '探测器' },",
      "    { value: '2', label: '遥控器' },",
      "    { value: '3', label: '模拟器' },",
      "    { value: '4', label: '有限探测器' },",
      "  ]}",
      "  onChange={tab => console.log({ activeKey1: tab.value })}",
      "/>"
    ],
    "description": "Tabs 纯手势标签栏"
  }
}
